[{"F:\\Bacancy\\React\\form-project-task\\src\\index.js":"1","F:\\Bacancy\\React\\form-project-task\\src\\App.js":"2","F:\\Bacancy\\React\\form-project-task\\src\\reportWebVitals.js":"3","F:\\Bacancy\\React\\form-project-task\\src\\containers\\MainRouter\\MainRouter.js":"4","F:\\Bacancy\\React\\form-project-task\\src\\containers\\Register\\Register.js":"5","F:\\Bacancy\\React\\form-project-task\\src\\containers\\Login\\Login.js":"6","F:\\Bacancy\\React\\form-project-task\\src\\components\\LoggedInScreen\\LoggedInScreen.js":"7","F:\\Bacancy\\React\\form-project-task\\src\\containers\\UserEducation\\UserEducation.js":"8","F:\\Bacancy\\React\\form-project-task\\src\\components\\Navigation\\NavigationItems\\NavigationItems.js":"9","F:\\Bacancy\\React\\form-project-task\\src\\components\\CreateForm\\CreateForm.js":"10","F:\\Bacancy\\React\\form-project-task\\src\\UI\\Button\\Button.js":"11","F:\\Bacancy\\React\\form-project-task\\src\\components\\Navigation\\NavigationItems\\NavigationItem\\NavigationItem.js":"12","F:\\Bacancy\\React\\form-project-task\\src\\components\\FormElements\\FormElements.js":"13","F:\\Bacancy\\React\\form-project-task\\src\\components\\HomePage\\HomePage.js":"14","F:\\Bacancy\\React\\form-project-task\\src\\components\\UserDetails\\UserDetails.js":"15","F:\\Bacancy\\React\\form-project-task\\src\\containers\\EditEducation\\EditEducation.js":"16","F:\\Bacancy\\React\\form-project-task\\src\\containers\\ChangePassword\\ChangePassword.js":"17","F:\\Bacancy\\React\\form-project-task\\src\\UI\\Logo\\Logo.js":"18"},{"size":500,"mtime":499162500000,"results":"19","hashOfConfig":"20"},{"size":247,"mtime":1610356190096,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"20"},{"size":2549,"mtime":1612863362697,"results":"23","hashOfConfig":"20"},{"size":17504,"mtime":1612863201127,"results":"24","hashOfConfig":"20"},{"size":4876,"mtime":1612863874716,"results":"25","hashOfConfig":"20"},{"size":1033,"mtime":1612863503153,"results":"26","hashOfConfig":"20"},{"size":4043,"mtime":1612862490586,"results":"27","hashOfConfig":"20"},{"size":1759,"mtime":1612855763974,"results":"28","hashOfConfig":"20"},{"size":1336,"mtime":1612510310847,"results":"29","hashOfConfig":"20"},{"size":412,"mtime":1610443265025,"results":"30","hashOfConfig":"20"},{"size":422,"mtime":1612855256000,"results":"31","hashOfConfig":"20"},{"size":2370,"mtime":1612613734564,"results":"32","hashOfConfig":"20"},{"size":903,"mtime":1612863412788,"results":"33","hashOfConfig":"20"},{"size":1722,"mtime":1612856416352,"results":"34","hashOfConfig":"20"},{"size":8926,"mtime":1612862787574,"results":"35","hashOfConfig":"20"},{"size":4559,"mtime":1612863475902,"results":"36","hashOfConfig":"20"},{"size":263,"mtime":1612783197927,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"19yr3g6",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"F:\\Bacancy\\React\\form-project-task\\src\\index.js",[],["80","81"],"F:\\Bacancy\\React\\form-project-task\\src\\App.js",[],"F:\\Bacancy\\React\\form-project-task\\src\\reportWebVitals.js",[],"F:\\Bacancy\\React\\form-project-task\\src\\containers\\MainRouter\\MainRouter.js",["82"],"import React, { Component } from 'react'\r\nimport { Route, Switch, Link } from 'react-router-dom'\r\nimport Login from '../Login/Login'\r\nimport Register from '../Register/Register'\r\nimport HomePage from '../../components/HomePage/HomePage'\r\nimport LoggedInScreen from '../../components/LoggedInScreen/LoggedInScreen'\r\nimport UserDetails from '../../components/UserDetails/UserDetails'\r\nimport UserEducation from '../UserEducation/UserEducation'\r\nimport NavigationItems from '../../components/Navigation/NavigationItems/NavigationItems';\r\nimport ChangePassword from '../ChangePassword/ChangePassword';\r\nimport EditEducation from '../EditEducation/EditEducation'\r\nimport styles from './MainRouter.module.css'\r\n\r\nclass MainRouter extends Component {\r\n\r\n    state = {\r\n        loggedIn:JSON.parse(localStorage.getItem(\"loggedInState\")),\r\n        loggedInId:JSON.parse(localStorage.getItem(\"loggedInId\")),\r\n    }\r\n    loginStateChange = (login, id) => {\r\n        this.setState({loggedIn:login, loggedInId:id});\r\n    }\r\n\r\n    render() {\r\n        let nav;\r\n        if(this.state.loggedIn){\r\n            nav =(\r\n            <nav className={styles.nav}>\r\n                <NavigationItems loggedIn={true} loggedInId={this.state.loggedInId}/>\r\n            </nav>\r\n            )\r\n        }\r\n        else{\r\n            nav=(\r\n                <nav className={styles.nav}>\r\n                    <NavigationItems loggedIn={false} loggedInId={this.state.loggedInId} />\r\n                </nav>\r\n            )\r\n        }\r\n        return (\r\n            <div>\r\n                {nav}\r\n                <main>\r\n                    {this.props.children}\r\n                </main>\r\n                <Switch>\r\n                    <Route path=\"/login\" render={() => <Login login={this.loginStateChange} />} />\r\n                    <Route path=\"/register\" component={Register} />\r\n                    <Route path='/user-details/:id' exact component={UserDetails} />\r\n                    <Route path='/user-education/:id' exact component={UserEducation} />\r\n                    <Route path='/edit-education/:id' exact component={EditEducation} />\r\n                    <Route path='/change-password/:id'  render={() => <ChangePassword login={this.loginStateChange} />} />\r\n                    <Route path='/:id' render={() => <LoggedInScreen login={this.loginStateChange} />} />\r\n                    <Route path='/' exact render={() => <HomePage login={this.loginStateChange} /> } />\r\n                </Switch>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default MainRouter","F:\\Bacancy\\React\\form-project-task\\src\\containers\\Register\\Register.js",[],"F:\\Bacancy\\React\\form-project-task\\src\\containers\\Login\\Login.js",[],"F:\\Bacancy\\React\\form-project-task\\src\\components\\LoggedInScreen\\LoggedInScreen.js",["83","84","85"],"import React, {Component} from 'react'\r\nimport {Link, withRouter} from 'react-router-dom'\r\nimport styles from './LoggedInScreen.module.css'\r\nimport Button from '../../UI/Button/Button'\r\n\r\nclass LoggedInScreen extends Component{\r\n    logOut= () => {\r\n        \r\n        localStorage.setItem(\"loggedInState\", JSON.stringify(false));\r\n        localStorage.setItem(\"loggedInId\", null);\r\n        this.props.login(false, null);\r\n        this.props.history.push(\"/\");\r\n    }\r\n    \r\n    render(){\r\n        let id= this.props.match.params.id;\r\n        let users = JSON.parse(localStorage.getItem(\"user_information\"));\r\n        let user = users.find(u =>{\r\n            return  u.personalDetails.id === id});\r\n        let name= user.personalDetails.firstName + \" \" + user.personalDetails.lastName;\r\n            \r\n        return(\r\n            <div> \r\n                <h1 style={{marginLeft: '35%', marginRight: '35%'}}>You Are Logged In As {name}</h1>\r\n            </div>\r\n            )\r\n    }\r\n}\r\n    \r\nexport default withRouter(LoggedInScreen);","F:\\Bacancy\\React\\form-project-task\\src\\containers\\UserEducation\\UserEducation.js",[],"F:\\Bacancy\\React\\form-project-task\\src\\components\\Navigation\\NavigationItems\\NavigationItems.js",["86"],"import React, {Component} from 'react';\r\nimport NavigationItem from '../NavigationItems/NavigationItem/NavigationItem'\r\nimport styles from './NavigationItems.module.css'\r\nimport {Link} from 'react-router-dom';\r\nimport Logo from '../../../UI/Logo/Logo'\r\n\r\nclass NavigationItems extends Component{\r\n    render(){\r\n    let navItems;\r\n    let i= this.props.loggedIn;\r\n    if(i){\r\n        let id= this.props.loggedInId;\r\n        let users = JSON.parse(localStorage.getItem(\"user_information\"));\r\n        let user= users.find(u => {\r\n            return u.personalDetails.id === id;\r\n        })\r\n        navItems= (\r\n            <ul className={styles.NavigationItems}>\r\n                \r\n                <NavigationItem link={\"/user-details/\" + id}  >User Details</NavigationItem>\r\n                <NavigationItem link={\"/user-education/\" + id}  >User Education</NavigationItem>\r\n                <NavigationItem link={\"/change-password/\" + id}  >Change Password</NavigationItem>\r\n                <NavigationItem link={\"/\" + id}>{user.personalDetails.firstName}</NavigationItem>\r\n                <NavigationItem link=\"/\"  >Logout</NavigationItem>\r\n            </ul>\r\n        )\r\n    }\r\n    else{\r\n        navItems= (\r\n            <ul className={styles.NavigationItems}>\r\n                <NavigationItem link=\"/\">Home</NavigationItem>\r\n                <NavigationItem link=\"/login\">Login</NavigationItem>\r\n                <NavigationItem link=\"/register\">Register</NavigationItem>\r\n            </ul>\r\n        )\r\n    }\r\n    \r\n    return(\r\n        <div>\r\n            <div  className={styles.Logo} >\r\n                <Logo/>\r\n            </div>\r\n            {navItems}\r\n        </div>\r\n    )\r\n    }\r\n    \r\n        \r\n        \r\n        \r\n\r\n}\r\nexport default NavigationItems;","F:\\Bacancy\\React\\form-project-task\\src\\components\\CreateForm\\CreateForm.js",[],"F:\\Bacancy\\React\\form-project-task\\src\\UI\\Button\\Button.js",[],"F:\\Bacancy\\React\\form-project-task\\src\\components\\Navigation\\NavigationItems\\NavigationItem\\NavigationItem.js",[],"F:\\Bacancy\\React\\form-project-task\\src\\components\\FormElements\\FormElements.js",["87"],"import React from 'react';\r\nimport styles from './FormElements.module.css'\r\nimport DayPicker from 'react-day-picker/DayPickerInput';\r\nimport 'react-day-picker/lib/style.css';\r\n\r\nconst FormElements =(props) => {\r\n    let formElement= null;\r\n    const inputClasses= [styles.FormElements]\r\n    switch(props.elementType){\r\n        case('date'):\r\n        let date= new Date();\r\n            formElement=\r\n                <div>\r\n                    <DayPicker\r\n                        onDayChange={props.changed}\r\n                        value={props.value}\r\n                        />\r\n                        <br/>\r\n                    {props.touched ? (props.invalid ? <span className={styles.error}>{props.errorMsg}</span>  : null)  : null}\r\n                </div>\r\n            break;\r\n        case('input'):\r\n            formElement= \r\n                <div>\r\n                    <input \r\n                            onBlur={props.changed}\r\n                            className={inputClasses.join(' ')}  \r\n                            type={props.elementConfig.type} \r\n                            onChange={props.changed} \r\n                            placeholder={props.elementConfig.placeholder} \r\n                            name={props.label} \r\n                            value={props.value} />\r\n\r\n                    {props.touched ? (props.invalid ? <span className={styles.error}>{props.errorMsg}</span>  : null)  : null}\r\n                </div>\r\n            break;\r\n        case('select'):\r\n            formElement=(\r\n                <select className={styles.FormElements} onChange={props.changed} value={props.value}>\r\n                    {props.elementConfig.placeholder.map(option =>(\r\n                        <option key={option.value} value={option.value}>\r\n                            {option.displayValue}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            );\r\n            break;\r\n\r\n        default:\r\n            formElement= <input className={inputClasses.join(\" \")} type={props.elementConfig.type} onChange={props.changed} placeholder=\"enter here\" value={props.value} />\r\n            break;\r\n    }\r\n\r\n    return (\r\n        <div className={styles.Input}>\r\n            <label className={styles.Label}>{props.label}</label>\r\n            {formElement}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormElements;","F:\\Bacancy\\React\\form-project-task\\src\\components\\HomePage\\HomePage.js",[],"F:\\Bacancy\\React\\form-project-task\\src\\components\\UserDetails\\UserDetails.js",[],"F:\\Bacancy\\React\\form-project-task\\src\\containers\\EditEducation\\EditEducation.js",["88","89"],"import React , {Component} from 'react';\r\nimport CreateForm from '../../components/CreateForm/CreateForm'\r\nimport Button from '../../UI/Button/Button'\r\nimport styles from './EditEducation.module.css'\r\n\r\nclass EditEducation extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            formIsValid: true,\r\n            educationalInformation : \r\n            {   \r\n                schoolName: {\r\n                    elementDisplayName: 'Institution Name',\r\n                    elementType: 'input',\r\n                    elementConfig: {\r\n                        type: 'text',\r\n                        placeholder: 'Your School Name'\r\n                    },\r\n                    value: '',\r\n                    validation:{\r\n                        required: true,\r\n                    },\r\n                    valid: true,\r\n                    touched: false,\r\n                    errorMsg: \"\"\r\n                },\r\n                percentage: {\r\n                    elementDisplayName: 'Percentage',\r\n                    elementType: 'input',\r\n                    elementConfig: {\r\n                        type: 'text',\r\n                        placeholder: 'Your Percentage/CGPA'\r\n                    },\r\n                    value: '',\r\n                    validation:{\r\n                        percentage: true,\r\n                        required: true,\r\n                    }, \r\n                    valid: true,\r\n                    touched: false,\r\n                    errorMsg: \"\"\r\n                },\r\n                course: {\r\n                    elementDisplayName: 'Course',\r\n                    elementType: 'input',\r\n                    elementConfig: {\r\n                        type: 'text',\r\n                        placeholder: 'Your Name'\r\n                    },\r\n                    value: '',\r\n                    validation:{\r\n                        required: true,\r\n                    }, \r\n                    valid: true,\r\n                    touched: false,\r\n                    errorMsg: \"\"\r\n                },\r\n                startDate: {\r\n                    elementDisplayName: 'Start Date',\r\n                    elementType: 'date',\r\n                    elementConfig: {\r\n                        type: 'date',\r\n                        placeholder: 'Select Date'\r\n                    },\r\n                    value: '',\r\n                    validation:{\r\n                        required: true,\r\n                    }, \r\n                    valid: true,\r\n                    touched: false,\r\n                    errorMsg: \"\"\r\n                },  \r\n                endDate: {\r\n                    elementDisplayName: 'End Date',\r\n                    elementType: 'date',\r\n                    elementConfig: {\r\n                        type: 'date',\r\n                        placeholder: 'Select Date'\r\n                    },\r\n                    value: '',\r\n                    validation:{\r\n                        required: true,\r\n                        endDate: true\r\n                    }, \r\n                    valid: true,\r\n                    touched: false,\r\n                    errorMsg: \"\"\r\n                },          \r\n            }\r\n            \r\n                \r\n            }\r\n        }\r\n        education;\r\n        componentDidMount(){\r\n            this.parseQueryParams();\r\n            let preFilledEducation = {\r\n                ...this.state.educationalInformation\r\n            }\r\n            Object.keys(this.education).forEach(e => {\r\n                    preFilledEducation[e].value= this.education[e];\r\n                }\r\n                )\r\n            \r\n            this.setState({educationalInformation: preFilledEducation})\r\n        }\r\n        parseQueryParams(){\r\n            const query = new URLSearchParams(this.props.location.search);\r\n            \r\n            let obj={}\r\n            for(let param of query.entries()){\r\n                let value= param[1];\r\n                obj[param[0]] = value;\r\n            }\r\n            this.education = obj;\r\n        }\r\n        checkValidity(value, rules){\r\n            let passwordRegex = /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,16}$/;\r\n            let percentRegex = /^([1-9]([0-9])?|0)(\\.[0-9]{1,2})%?$/;\r\n            let isValidObject = {\r\n                isValid: true,\r\n                errorMessage: ''\r\n            }\r\n            if(rules){\r\n                if(rules.required){\r\n                    isValidObject.isValid = value.trim() !== '' && isValidObject.isValid;\r\n                    isValidObject.errorMessage = \"Required\"\r\n                }\r\n                if(rules.endDate){\r\n                    \r\n                let startDate = new Date(this.state.educationalInformation.startDate.value);\r\n                let endDate= new Date(value);\r\n                isValidObject.isValid= (endDate > startDate) && isValidObject.isValid;\r\n                    isValidObject.errorMessage = \"End Date should be more than start date\"\r\n                }\r\n                if(rules.percentage){\r\n                    isValidObject.isValid= percentRegex.test(value) && isValidObject.isValid;\r\n                    isValidObject.errorMessage = \"Percentage Format Incorrect\"\r\n                }\r\n            }\r\n            return isValidObject;\r\n        }\r\n        inputChangedHandler =(event, id) => {\r\n            const updatedEducation ={\r\n                ...this.state.educationalInformation\r\n            }\r\n            const updatedEducationalInformation ={\r\n                ...updatedEducation[id]\r\n            }\r\n            \r\n            if (id === 'startDate' || id === 'endDate') {\r\n                if (event) {\r\n                    updatedEducationalInformation.value = event.toLocaleDateString();\r\n                } \r\n            }\r\n            else {\r\n                updatedEducationalInformation.value = event.target.value;\r\n            }\r\n            updatedEducationalInformation.touched= true\r\n            let errorObject = this.checkValidity(updatedEducationalInformation.value, updatedEducationalInformation.validation);    \r\n            updatedEducationalInformation.valid= errorObject.isValid;\r\n            updatedEducationalInformation.errorMsg= errorObject.errorMessage;\r\n            updatedEducation[id] = updatedEducationalInformation;\r\n            let formIsValid= true;\r\n            for(let id in updatedEducation){\r\n                formIsValid = formIsValid && updatedEducation[id].valid;\r\n            }   \r\n            this.setState({educationalInformation: updatedEducation, formIsValid: formIsValid});\r\n        }\r\n        editEducationHandler =() => {\r\n            let id= this.props.match.params.id;\r\n            //create new object to replace the old one\r\n            \r\n            let educationalFormData ={};\r\n            for(let key in this.state.educationalInformation) {\r\n                //check if form is filled\r\n                if(this.state.educationalInformation[key].valid){\r\n                    educationalFormData[key] = this.state.educationalInformation[key].value;\r\n                }\r\n                \r\n            }\r\n            let users = JSON.parse(localStorage.getItem(\"user_information\"));\r\n            let updatedUsers= [\r\n                ...users\r\n            ]\r\n            let flag = 0;\r\n\r\n            \r\n        for(let key in updatedUsers){\r\n            let user = updatedUsers[key];\r\n            if(user.personalDetails.id === id){\r\n                for(let education in user.educationalDetails){\r\n                    flag =0;\r\n                    Object.keys(this.education).forEach(e => {\r\n                        if(user.educationalDetails[education][e] === this.education[e]){\r\n                        }\r\n                        else{\r\n                            flag = flag + 1;\r\n                        }\r\n                        \r\n                    }\r\n                    )\r\n                    if(flag === 0){\r\n                        user.educationalDetails[education] = educationalFormData;\r\n                    }\r\n                }\r\n                updatedUsers[key] = user;\r\n            }\r\n        }\r\n        localStorage.setItem(\"user_information\", JSON.stringify(updatedUsers));\r\n            alert(\"Successfully updated education!!!\");\r\n            this.props.history.push(\"/user-education/\" + id);\r\n\r\n        \r\n    }\r\n        render(){\r\n            return(\r\n                <div>\r\n                    <CreateForm \r\n                        header=\"Edit Education Form\"\r\n                        formElements={this.state.educationalInformation}\r\n                        inputChangedHandler={(event, id) => this.inputChangedHandler(event, id)} />\r\n                    <Button btnClass={styles.Edit} clicked={this.editEducationHandler} disabled={!this.state.formIsValid}>Save Changes</Button>\r\n                </div>\r\n           \r\n            )\r\n        }    \r\n        \r\n    }\r\nexport default EditEducation;","F:\\Bacancy\\React\\form-project-task\\src\\containers\\ChangePassword\\ChangePassword.js",[],"F:\\Bacancy\\React\\form-project-task\\src\\UI\\Logo\\Logo.js",[],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":2,"column":25,"nodeType":"96","messageId":"97","endLine":2,"endColumn":29},{"ruleId":"94","severity":1,"message":"95","line":2,"column":9,"nodeType":"96","messageId":"97","endLine":2,"endColumn":13},{"ruleId":"94","severity":1,"message":"98","line":3,"column":8,"nodeType":"96","messageId":"97","endLine":3,"endColumn":14},{"ruleId":"94","severity":1,"message":"99","line":4,"column":8,"nodeType":"96","messageId":"97","endLine":4,"endColumn":14},{"ruleId":"94","severity":1,"message":"95","line":4,"column":9,"nodeType":"96","messageId":"97","endLine":4,"endColumn":13},{"ruleId":"94","severity":1,"message":"100","line":11,"column":13,"nodeType":"96","messageId":"97","endLine":11,"endColumn":17},{"ruleId":"94","severity":1,"message":"101","line":119,"column":17,"nodeType":"96","messageId":"97","endLine":119,"endColumn":30},{"ruleId":"102","severity":1,"message":"103","line":195,"column":57,"nodeType":"104","messageId":"105","endLine":202,"endColumn":22},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'styles' is defined but never used.","'Button' is defined but never used.","'date' is assigned a value but never used.","'passwordRegex' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'flag', 'flag'.","ArrowFunctionExpression","unsafeRefs","no-global-assign","no-unsafe-negation"]